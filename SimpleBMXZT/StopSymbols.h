#pragma once
#include <map>
using namespace std;

/// <summary>
/// Таблица стоп-символов
/// </summary>
class StopSymbols
{
private:
	map<char,int> table;
public:
	/// <summary>
	/// Инициализация таблицы стоп-символов
	/// </summary>
	/// <param name="str">Подстрока (образ)</param>
	void Init(const char* str) {
		const int _length = strlen(str);
		for (int i = 0; i <= 255; i++) 
		{
			table[(char)i] = -1;
		}
		/*
		* Цикл проходит подстроку справа налево.
		* Для каждого символа подстроки устанавливается его порядок, который равен расстоянию от текущего символа до конца подстроки
		* Например, пусть будет строка						Д а н н ы е
		* каждому символу будет соответствовать его порядок	5 4 2 2 1 6
		* причём:
		* 1) если символы повторяются, то для них устанавливается один и тот же порядок (но самый ближайший к концу строки, в данном примере для 'н' это будет 2);
		* 2) Повтор символов на порядок присваивания значений не отражается. В данном примере символу 'a' присвоился порядок не 3, а 4, несмотря на две двойки у 'н' после него;
		* 3) значение для последнего символа будет соответствовать длине подстроки.
		*/
		for (int i = 0; i < _length; i++) 
		{
			table[str[i]] = _length - i - 1;
		}
		table[str[_length - 1]] = _length;
	}

	/// <param name="currentChar">Текущий символ</param>
	/// <returns>Порядок стоп-символа</returns>
	int Get(char currentChar) {
		return table[currentChar];
	}
};